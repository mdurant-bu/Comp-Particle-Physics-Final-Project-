import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv("MuRun2010B_withoutM.csv", delim_whitespace=True)

numeric_cols = ["E1", "px1", "py1", "pz1", "pt1", "eta1", "phi1", "Q1",
                "E2", "px2", "py2", "pz2", "pt2", "eta2", "phi2", "Q2"] #Have to do this or we get NANs in next step

df[numeric_cols] = df[numeric_cols].apply(pd.to_numeric, errors='coerce')

df_dimuon = df[df["Q1"] * df["Q2"] < 0] #Only keep dimuon events with opposite charge

def invariant_mass(df):
    E1, E2 = df["E1"], df["E2"]
    px1, px2 = df["px1"], df["px2"]
    py1, py2 = df["py1"], df["py2"]
    pz1, pz2 = df["pz1"], df["pz2"]
    return np.sqrt((E1 + E2)**2 - (px1 + px2)**2 - (py1 + py2)**2 - (pz1 + pz2)**2)

df_dimuon = df_dimuon.copy()  
df_dimuon.loc[:, "m_inv"] = invariant_mass(df_dimuon)

mass_ranges = [
    (0, 5),
    (5, 15),
    (15, 125),
    (100, 200),
    (200, 400),
    (400, 1400)
]

fig, axes = plt.subplots(2, 3, figsize=(18, 10))
axes = axes.flatten()

for i, (low, high) in enumerate(mass_ranges):
    subset = df_dimuon[(df_dimuon["m_inv"] >= low) & (df_dimuon["m_inv"] < high)]
    axes[i].hist(subset["m_inv"], bins=50, range=(low, high), histtype="step", color="blue")
    axes[i].set_title(f"Mass Range: {low}-{high} GeV")
    axes[i].set_xlabel("Invariant Mass (GeV)")
    axes[i].set_ylabel("Events")
    if len(subset) > 0:  #Prevent divide by 0
        axes[i].set_yscale("log")

plt.tight_layout()
plt.show()

'''The plots for the CMS data show the same peaks as in questions 2 and 4, with the exception of the peak in the sixth plot which was assigned to the 4 top quark production.'''
